## YAK_Project
##  https://github.com/SAikirim/YAK_Project.git

mal_api_list=[
'__vbaChkstk',
'__vbaEnd',
'__vbaErrorOverflow',
'__vbaExceptHandler',
'__vbaFPException',
'__vbaFpI4',
'__vbaFreeObj',
'__vbaFreeStr',
'__vbaFreeVar',
'__vbaFreeVarList',
'__vbaHresultCheckObj',
'__vbaInStr',
'__vbaLenBstrB',
'__vbaLenVarB',
'__vbaNew2',
'__vbaObjSetAddref',
'__vbaSetSystemError',
'__vbaStrMove',
'__vbaStrVarMove',
'__vbaUbound',
'__vbaVarAdd',
'__vbaVarMove',
'__vbaVarTstEq',
'__vbaVarTstGt',
'_adj_fdiv_m16i',
'_adj_fdiv_m32',
'_adj_fdiv_m32i',
'_adj_fdiv_m64',
'_adj_fdiv_r',
'_adj_fdivr_m16i',
'_adj_fdivr_m32',
'_adj_fdivr_m32i',
'_adj_fdivr_m64',
'_adj_fpatan',
'_adj_fprem',
'_adj_fprem1',
'_adj_fptan',
'_allmul',
'_CIatan',
'_CIcos',
'_CIexp',
'_CIlog',
'_CIsin',
'_CIsqrt',
'_CItan',
'Accept',
'AdjustTokenPrivileges',
'AttachThreadInput',
'Bind',
'CertOpenSystemStore',
'CloseHandle',
'Connect',
'ConnectNamedpipe',
'ControlService',
'CreateDirectoryW',
'CreateEventW',
'CreateFile',
'CreateFileA',
'CreateFileMapping',
'CreateFileMappingW',
'CreateFileW',
'CreateMutex',
'CreateMutexA',
'CreateMutexW',
'CreateProcess',
'CreateRemoteThread',
'CreateSemaphoreW',
'CreateService',
'CreateThread',
'CreateToolgelp32Snapshot',
'CryptAcuireContext',
'DeleteCriticalSection',
'DeleteFileW',
'DeleteUrlCacheEntry',
'DeviceloControl',
'DispatchMessage',
'DllFunctionCall',
'DuplicateTokenEx',
'EnableExecuteProtectionSupport',
'EnterCriticalSection',
'EnumProcesses',
'EnumProcessModules',
'EVENT_SINK_AddRef',
'EVENT_SINK_QueryInterface',
'EVENT_SINK_Release',
'ExitProcess',
'ExitThread',
'FindFirstFile',
'FindFirstUrlCacheEntryA',
'FindNextUrlCacheEntryA',
'FindResource',
'FindWindow',
'FreeEnvironmentStringsA',
'FreeEnvironmentStringsW',
'FtpPutFile',
'GetAdapterInfo',
'GetAsyncKeyState',
'GetCommandLineA',
'GetCommandLineW',
'GetConsoleCP',
'GetConsoleMode',
'GetCurrentDirectoryW',
'GetCurrentThreadld',
'GetEnvironmentVariableW',
'GetFileAttributesExW',
'GetFileAttributesW',
'GetFileSize',
'GetFileType',
'GetForeGroundWindow',
'Gethostbyname',
'Gethostname',
'GetKeyState',
'GetMessage',
'GetModuleFilename',
'GetModuleFileNameA',
'GetModuleHandle',
'GetProcessId',
'GetSecurityInfo',
'GetStartupInfo',
'GetStartupInfoA',
'GetSystemDefaultLangId',
'GetSystemTime',
'GetTempPath',
'GetThreadContext',
'GetTokenInformation',
'GetUserNameA',
'GetVersion',
'GetVersionEx',
'GetVersionExA',
'GetWindowsDirectory',
'GetWindowsThreadProcessId',
'HeapAlloc',
'HeapDestroy',
'HeapFree',
'HeapReAlloc',
'HeapSize',
'HttpAddRequestHeaders',
'HttpOpenRequest',
'HTTPSendRequest',
'InitializeCriticalSection',
'InternetConnect',
'InternetCrackUrlW',
'InternetOpen',
'InternetOpenA',
'InternetReadFile',
'ioctlsocket',
'IsNTAdmin',
'LdrLoadDll',
'LeaveCriticalSection',
'LoadLibraryA',
'LoadLibraryExA',
'LoadLibraryExW',
'LoadLibraryW',
'LoadResource',
'LocalAlloc',
'LocalFree',
'LockResource',
'LsaEnumerateLogonSessions',
'MapViewOfFile',
'MapVirtualKey',
'Module32First',
'Module32Next',
'NetScheduleJobAdd',
'OpenEventA',
'OpenEventW',
'OpenMutex',
'OpenServiceA',
'OutputDebugString',
'PeekNamedPipe',
'Process32First',
'Process32FirstW',
'Process32Next',
'Process32NextW',
'QueueUserAPC',
'RaiseException',
'ReadConsoleW',
'ReadProcessMemory',
'Recv',
'RegCloseKey',
'RegCreateKey',
'RegCreateKeyExA',
'RegCreateKeyExW',
'RegDeleteKeyA',
'RegDeleteKeyW',
'RegDeleteValueA',
'RegDeleteValueW',
'RegisterHotKey',
'RegOpenKey',
'RegOpenKeyExA',
'RegOpenKeyExW',
'RegQueryValueExA',
'RegQueryValueExW',
'RegSetValue',
'RegSetValueExA',
'RegSetValueExW',
'ReleaseMutex',
'ResumeThread',
'RtlCreateRegistryKey',
'RtlWriteRegistryValue',
'Send',
'SetEvent',
'SetFileTime',
'SetThreadContext',
'SetWindowsHookEx',
'SetWindowsHookExA',
'SfcTerminateWatcherThread',
'SHBrowseForFolderA',
'ShellExecute',
'ShellExecuteA',
'SHFileOperationA',
'SHGetFileInfoA',
'SHGetFolderPathW',
'SHGetPathFromIDListA',
'SizeOfResource',
'socket',
'StartServiceA',
'StartServiceCtrlDispatcher',
'SuspendThread',
'System',
'TerminateProcess',
'Thread32First',
'TlsAlloc',
'TlsGetValue',
'TlsSetValue',
'Toolhelp32ReadProcessMemory',
'TryEnterCriticalSection',
'UnhandledExceptionFilter',
'UnhookWindowsHookEx',
'URLDownloadToFile',
'URLDownloadToFileA',
'Virtualalloc',
'VirtualAllocEx',
'Virtualfree',
'VirtualProtect',
'VirtualProtectEx',
'VirtualQuery',
'WideCharToMultiByte',
'WinExec',
'WriteConsoleA',
'WriteConsoleW',
'WriteProcessMemory',
'WSAIoctl',
'WSASocket',
'WSAStartup',
'NtOpenThread',
'ExitWindowsEx',
'FindResourceW',
'CryptExportKey',
'CreateRemoteThreadEx',
'MessageBoxTimeoutW',
'StartServiceW',
'GetVolumeNameForVolumeMountPointW',
'GetFileInformationByHandle',
'CryptAcquireContextW',
'RtlDecompressBuffer',
'LookupAccountSidW',
'SetUnhandledExceptionFilter',
'InternetConnectA',
'GetComputerNameW',
'RegEnumValueA',
'NtOpenFile',
'NtSaveKeyEx',
'HttpOpenRequestA',
'GetFileSizeEx',
'LoadStringW',
'SetInformationJobObject',
'WSAConnect',
'CryptDecrypt',
'GetTimeZoneInformation',
'InternetOpenW',
'CoInitializeEx',
'CryptGenKey',
'NtQueryInformationFile',
'GetSystemMetrics',
'NtDeleteValueKey',
'NtOpenKeyEx',
'sendto',
'IsDebuggerPresent',
'RegQueryInfoKeyW',
'NetShareEnum',
'InternetOpenUrlW',
'WSASocketA',
'CopyFileExW',
'ShellExecuteExW',
'SearchPathW',
'InternetOpenUrlA',
'LdrUnloadDll',
'EnumServicesStatusW',
'EnumServicesStatusA',
'WSASend',
'CopyFileW',
'NtDeleteFile',
'CreateActCtxW',
'timeGetTime',
'MessageBoxTimeoutA',
'CreateServiceA',
'FindResourceExW',
'WSAAccept',
'InternetConnectW',
'HttpSendRequestA',
'GetVolumePathNameW',
'InternetGetConnectedStateExW',
'GetAdaptersInfo',
'shutdown',
'NtQueryMultipleValueKey',
'NtQueryKey',
'GetSystemWindowsDirectoryW',
'GlobalMemoryStatusEx',
'OpenServiceW',
'getsockname',
'LoadStringA',
'NtCreateUserProcess',
'GetSystemTimeAsFileTime',
'SetStdHandle',
'CoCreateInstanceEx',
'GetSystemDirectoryA',
'NtCreateMutant',
'IWbemServices_ExecQuery',
'NtDuplicateObject',
'OpenSCManagerW',
'CreateServiceW',
'MoveFileWithProgressW',
'NtDeviceIoControlFile',
'GetFileInformationByHandleEx',
'CopyFileA',
'NtLoadKey',
'GetNativeSystemInfo',
'NtOpenProcess',
'CryptUnprotectMemory',
'InternetWriteFile',
'WSASendTo',
'NtOpenSection',
'listen',
'OleInitialize',
'FindResourceA',
'RegEnumKeyExA',
'NtQueryDirectoryFile',
'CertOpenSystemStoreW',
'LdrGetProcedureAddress',
'GlobalMemoryStatus',
'NtSetInformationFile',
'OutputDebugStringA',
'GetAdaptersAddresses',
'CoInitializeSecurity',
'NtQueryFullAttributesFile',
'DeviceIoControl',
'__anomaly__',
'GetShortPathNameW',
'NtGetContextThread',
'GetKeyboardState',
'RemoveDirectoryA',
'InternetSetStatusCallback',
'NtResumeThread',
'SetFileInformationByHandle',
'NtCreateSection',
'NtQueueApcThread',
'DecryptMessage',
'GetUserNameExW',
'SetWindowsHookExW',
'HttpOpenRequestW',
'GetFileVersionInfoExW',
'FindWindowA',
'closesocket',
'RtlAddVectoredExceptionHandler',
'IWbemServices_ExecMethod',
'GetDiskFreeSpaceExW',
'TaskDialog',
'CryptEncrypt',
'WSARecvFrom',
'NtOpenMutant',
'CoGetClassObject',
'NtQueryValueKey',
'NtDelayExecution',
'select',
'HttpQueryInfoA',
'GetVolumePathNamesForVolumeNameW',
'InternetCrackUrlA',
'InternetSetOptionA',
'CreateDirectoryExW',
'NtShutdownSystem',
'DeleteUrlCacheEntryA',
'NtMapViewOfSection',
'LdrGetDllHandle',
'NtCreateKey',
'NtEnumerateValueKey',
'SetFileAttributesW',
'NtUnmapViewOfSection',
'CreateJobObjectW',
'NtDeleteKey',
'SetEndOfFile',
'GetUserNameExA',
'GetComputerNameA',
'URLDownloadToFileW',
'NtFreeVirtualMemory',
'recvfrom',
'NtUnloadDriver',
'NtTerminateThread',
'CryptUnprotectData',
'NtCreateThreadEx',
'DeleteService',
'GetFileVersionInfoSizeExW',
'OpenSCManagerA',
'GetSystemInfo',
'SetFilePointer',
'Module32FirstW',
'RegEnumKeyW',
'RtlCompressBuffer',
'SendNotifyMessageW',
'GetAddrInfoW',
'CryptProtectData',
'Thread32Next',
'NtAllocateVirtualMemory',
'RegEnumKeyExW',
'DrawTextExA',
'CreateToolhelp32Snapshot',
'FindWindowW',
'CoUninitialize',
'NtClose',
'WSARecv',
'CertOpenStore',
'InternetGetConnectedState',
'RtlAddVectoredContinueHandler',
'SHGetSpecialFolderLocation',
'CreateProcessInternalW',
'NtCreateDirectoryObject',
'EnumWindows',
'DrawTextExW',
'RegEnumValueW',
'SendNotifyMessageA',
'NtProtectVirtualMemory',
'NetUserGetLocalGroups',
'GetUserNameW',
'WSASocketW',
'getaddrinfo',
'AssignProcessToJobObject',
'CryptDecodeObjectEx',
'EncryptMessage',
'NtSetContextThread',
'InternetGetConnectedStateExA',
'RtlCreateUserThread',
'GetCursorPos',
'Module32NextW',
'NtLoadDriver',
'NetUserGetInfo',
'GetBestInterfaceEx',
'CertControlStore',
'NtWriteFile',
'NtReadVirtualMemory',
'GetDiskFreeSpaceW',
'GetFileVersionInfoW',
'FindFirstFileExW',
'FindWindowExW',
'GetSystemWindowsDirectoryA',
'CoCreateInstance',
'NtQuerySystemInformation',
'LookupPrivilegeValueW',
'NtReadFile',
'ReadCabinetState',
'InternetCloseHandle',
'FindWindowExA',
'ObtainUserAgentString',
'CryptCreateHash',
'GetTempPathW',
'CryptProtectMemory',
'NetGetJoinInformation',
'NtOpenKey',
'GetSystemDirectoryW',
'DnsQuery_A',
'RegQueryInfoKeyA',
'NtEnumerateKey',
'RemoveDirectoryW',
'FindFirstFileExA',
'CertOpenSystemStoreA',
'NtTerminateProcess',
'NtSetValueKey',
'CryptAcquireContextA',
'SetErrorMode',
'UuidCreate',
'RtlRemoveVectoredExceptionHandler',
'setsockopt',
'FindResourceExA',
'NtSuspendThread',
'GetFileVersionInfoSizeW',
'NtOpenDirectoryObject',
'InternetQueryOptionA',
'NtCreateFile',
'NtQueryAttributesFile',
'HttpSendRequestW',
'CryptHashMessage',
'CryptHashData',
'NtWriteVirtualMemory',
'SetFilePointerEx',
'CertCreateCertificateContext',
'DeleteUrlCacheEntryW',
'__exception__',
'acmStreamReset',
'LZSeek',
'ZP',
'midiStreamProperty',
'PStoreCreateInstance',
'AnyPopup',
'SHEmptyRecycleBinA',
'lstrcmpi',
'GetInterfaceInfo',
'capGetDriverDescriptionA',
'LZRead',
'IsDialogMessage',
'lstrlen',
'AddRefActCtx',
'SetFileShortNameA',
'RasEnumEntriesA',
'LookupPrivilegeDisplayNameA',
'CredEnumerateA',
'AccessCheckAndAuditAlarmA',
'DnsApiFree',
'DnsNameCompare_W',
'SHGetDiskFreeSpaceA',
'lstrcmp',
'SetFileShortNameW',
'CreateDesktopA',
'BRUSHOBJ_ulGetBrushColor',
'BroadcastSystemMessage',
'ConnectionError',
'FtpPutFileA',
'AccessCheckByTypeResultListAndAuditAlarmW',
'SetSystemTimeAdjustment',
'ConnectionWrite',
'CDLocateRng',
'FreeIconList',
'LookupPrivilegeNameA',
'TileChildWindows',
'CoInstall',
'CDBuildVect',
'DragObject',
'CoSetState',
'ConnectionClose',
'lstrcpyn',
'GetNumberOfConsoleMouseButtons',
'PaintDesktop',
'RasGetEntryDialParamsA',
'WSApSetPostRoutine',
'BaseQueryModuleData',
'WriteProfileSectionW',
'CancelDC',
'DnsValidateName_W',
'GetAltTabInfoW',
'GetMappedFileNameW',
'SetDebugErrorLevel',
'EraseTape',
'OemKeyScan',
'SetSystemMenu',
'EngCreateClip',
'DllCanUnloadNow',
'GetCurrentHwProfileA',
'RealGetWindowClassA',
'PrivateExtractIconsA',
'midiStreamOut',
'FoldStringA',
'DrawCaptionTempA',
'GetKBCodePage',
'SetVolumeMountPointA',
'SetDeskWallpaper',
'lstrcat',
'BroadcastSystemMessageExW',
'GetAltTabInfoA',
'GetExpandedNameA',
'WTSVirtualChannelWrite',
'WTSVirtualChannelClose',
'_sleep',
'CoQueryClientBlanket',
'WriteTapemark',
'DrawFrame',
'OpenWaitableTimerA',
'SetClassWord',
'AreAllAccessesGranted',
'MenuWindowProcW',
'OleLoadPictureEx',
'OpenJobObjectA',
'NetShareGetInfo',
'DllUnregisterServer',
'??0fstream@@QAE@PBDHH@Z',
'??1fstream@@UAE@XZ',
'?close@fstream@@QAEXXZ',
'?seekg@istream@@QAEAAV1@JW4seek_dir@ios@@@Z',
'?write@ostream@@QAEAAV1@PBDH@Z',
'InetIsOffline',
'SetDefaultCommConfigA',
'?read@istream@@QAEAAV1@PADH@Z',
'?seekp@ostream@@QAEAAV1@JW4seek_dir@ios@@@Z',
'MsiCloseHandle',
'?tellg@istream@@QAEJXZ',
'midiStreamRestart',
'EditWndProc',
'SymGetLineFromName',
'SymGetLineNext',
'SymGetSymFromName',
'MD5Init',
'DragQueryFile',
'SymEnumerateModules',
'SymFromName',
'SymGetSearchPath',
'MD5Update',
'SymEnumerateSymbols',
'SymEnumerateSymbols64',
'SymFindFileInPath',
'WTSVirtualChannelRead',
'SymEnumerateModules64',
'LoadKeyboardLayoutEx',
'SymGetLineFromName64',
'SymGetLinePrev',
'SymGetModuleInfoW64',
'SymGetSymFromName64',
'SymEnumerateSymbolsW',
'SymEnumerateSymbolsW64',
'SymGetFileLineOffsets64',
'SymGetLineNext64',
'SymGetLinePrev64',
'GetInternalWindowPos',
'LockWorkStation',
'GetInputDesktop',
'GetRawInputDeviceInfoA',
'midiStreamClose',
'DllGetClassObject',
'GetTapePosition',
'DllRegisterServer',
'GetDCPenColor',
'MenuWindowProcA',
'GetTapeStatus',
'SetInternalWindowPos',
'SetComputerNameExA',
'WTSEnumerateServersA',
'SetCalendarInfoW',
'midiStreamOpen',
'GetCalendarInfoA',
'GetThemeSysSize',
'WTSVirtualChannelQuery',
'midiStreamStop',
'WTSSendMessageA',
'ColorCorrectPalette',
'EnumDateFormatsExA',
'CancelTimerQueueTimer',
'DeleteVolumeMountPointA',
'FreeUserPhysicalPages',
'LocalFlags',
'SetProgmanWindow',
'PrepareTape',
'WTSVirtualChannelPurgeOutput',
'DllGetVersion',
'ShowStartGlass',
'StrRChrIA',
'AlignRects',
'AllowForegroundActivation',
'AddAuditAccessAceEx',
'BroadcastSystemMessageExA',
'GetColorSpace',
'OleGetIconOfFile',
'TranslateMessageEx',
'AVIStreamInfoA',
'InitAtomTable',
'IsGUIThread',
'LoadAlterBitmap',
'PrivateExtractIconExA',
'WTSEnumerateProcessesA',
'RtlZeroMemory',
'GetTapeParameters',
'PrivilegedServiceAuditAlarmW',
'DoEnvironmentSubstA',
'GetWindowModuleFileNameA',
'PrintDlgExA',
'GetThreadPriorityBoost',
'AccessCheckByTypeResultListAndAuditAlarmA',
'GetListBoxInfo',
'GetProgmanWindow',
'MoveFileWithProgressA',
'VarUI4FromUI8',
'WTSQueryUserConfigA',
'WTSSetUserConfigW',
'dwLBSubclass',
'CopyLZFile',
'GetVolumePathNameA',
'WantArrows',
'GetThemeTextMetrics',
'GetThemeEnumValue',
'SHIsFileAvailableOffline',
'SetTapeParameters',
'ImpersonateDdeClientWindow',
'ReadFileScatter',
'SHGetInverseCMAP',
'SetMessageExtraInfo',
'SetTapePosition',
'ShellExecuteEx',
'mciSendStringA',
'WOWShellExecute',
'WTSVirtualChannelOpen',
'acmDriverID',
'DrawMenuBarTemp',
'SetCursorContents',
'AccessCheckByTypeResultListAndAuditAlarmByHandleA',
'CoRegisterMallocSpy',
'IsBadHugeReadPtr',
'SetUserObjectInformationA',
'ShellAboutA',
'CascadeChildWindows',
'SHLoadInProc',
'WSAEnumNameSpaceProvidersA',
'dwOKSubclass',
'ChangeMenuW',
'CAEnumFirstCA',
'ColorMatchToTarget',
'EnumPropsExA',
'LocalCompact',
'SHFileOperation',
'WTSVirtualChannelPurgeInput',
'FatalExit',
'GetBinaryTypeA',
'TranslateAccelerator',
'WTSOpenServerA',
'CACloseCA',
'CreateTapePartition',
'CryptMemAlloc',
'ConvertToAutoInheritPrivateObjectSecurity',
'GdiDeleteLocalDC',
'GetGlyphIndicesA',
'GetMUILanguage',
'MapUserPhysicalPages',
'SetLocaleInfoW',
'SetConsoleCP',
'CAEnumNextCA',
'ImageList_GetFlags',
'ScrollChildren',
'StrRStrIA',
'WTSSetSessionInformationA',
'AddAuditAccessAce',
'LocalShrink',
'pcap_open_live',
'BRUSHOBJ_pvAllocRbrush',
'EnumSystemLanguageGroupsA',
'Extend',
'GetRasterizerCaps',
'OleUIBusyA',
'GetCurrentActCtx',
'SCardForgetReaderW',
'SE_InstallBeforeInit',
'SE_IsShimDll',
'SetMailslotInfo',
'GlobalWire',
'GetCurrentConsoleFont',
'GlobalFix',
'PrivateExtractIconsW',
'DrawCaptionTempW',
'DragQueryFileAorW',
'GetConsoleAliasesA',
'SwapMouseButton',
'VarR8FromBool',
'EnumUILanguagesA',
'FlatSB_SetScrollRange',
'GdiGradientFill',
'WTSOpenServerW',
'?close@ofstream@@QAEXXZ',
'CreatePrinterIC',
'ObjectCloseAuditAlarmA',
'Recover',
'SetUserGeoID',
'WSASetServiceW',
'WTSShutdownSystem',
'AddConsoleAliasA',
'ConnectionRead',
'LoadModule',
'UrlMkGetSessionOption',
'ADSIFreeColumn',
'ADSIGetColumn',
'ADSIModifyRdn',
'Heap32First',
'IsBadHugeWritePtr',
'SE_DllLoaded',
'SetCalendarInfoA',
'TraceSQLFetch',
'CopyFileExA',
'AuthzFreeAuditEvent',
'GetThemeSysInt',
'SHInvokePrinterCommandA',
'VarDecRound',
'CreateJobSet',
'DrawStatusTextW',
'GetProcessShutdownParameters',
'SHGetDataFromIDListA',
'lstrcpy',
'GetConsoleFontSize',
'GetProcessPriorityBoost',
'ImageList_AddIcon',
'SHCreateProcessAsUserW',
'__GetMainArgs',
'CoGetDefaultContext',
'ConsoleMenuControl',
'CreateToolbar',
'ExtractIconEx',
'InitMUILanguage',
'LZCreateFileW',
'SetLastConsoleEventActive',
'SetLocaleInfoA',
'WTSLogoffSession',
'AdjustTokenGroups',
'PrinterMessageBoxA',
'TraceSQLConnect',
'AllocateUserPhysicalPages',
'EnumICMProfilesA',
'GetConsoleInputWaitHandle',
'ReadConsoleInputExA',
'ReadConsoleInputExW',
'SE_InstallAfterInit',
'SE_ProcessDying',
'SHQueryRecycleBinW',
'EnumWindowStationsW',
'RegisterWaitForInputIdle',
'ShellHookProc',
'ShellMessageBoxA',
'VarAdd',
'EnumCalendarInfoExW',
'GetNumberOfConsoleFonts',
'SamAddMemberToAlias',
'capCreateCaptureWindowW',
'ADSIGetFirstRow',
'ADSIGetNextColumnName',
'ADSIGetNextRow',
'ADSIGetObjectAttributes',
'ADSIGetPreviousRow',
'CancelDeviceWakeupRequest',
'GdiConvertMetaFilePict',
'GetHandleContext',
'KbdLayerDescriptor',
'MtxCluIsClusterPresent',
'ObjectOpenAuditAlarmA',
'QueryMemoryResourceNotification',
'RestoreLastError',
'SetLayoutWidth',
'WTSSetSessionInformationW',
'SetWindowsHookW',
'acmStreamSize',
'GetEffectiveClientRect',
'ImageList_GetImageRect',
'LsaRetrievePrivateData',
'PathRemoveArgsA',
'RatingCustomInit',
'RequestDeviceWakeup',
'STROBJ_bGetAdvanceWidths',
'SetupSetFileQueueAlternatePlatformA',
'StartDocDlgW',
'AccessCheckByTypeAndAuditAlarmW',
'AppCleanup',
'CheckEscapesW',
'CreatePropertySheetPage',
'CreateStatusWindow',
'LZStart',
'SHPathPrepareForWriteA',
'StrChrNIW',
'UnregisterApplicationRecoveryCallback',
'ZwQueryFullAttributesFile',
'AuthzAddSidsToContext',
'EnumCalendarInfoExA',
'EnumSystemLanguageGroupsW',
'FindActCtxSectionGuid',
'RegisterWowExec',
'SetRelAbs',
'UrlHashA',
'videoThunk32',
'DlgDirSelectExW',
'AddFontResourceExA',
'Chkdsk',
'DEVICEMODE',
'GdiTransparentBlt',
'GetConsoleAliasA',
'GetConsoleCursorMode',
'ImmEscapeA',
'ShowConsoleCursor',
'WTSSetUserConfigA',
'acmStreamClose',
'DdeSetQualityOfService',
'FormatEx',
'GetConsoleAliasesW',
'GetEnhMetaFilePixelFormat',
'NtAlertThread',
'PrivMoveFileIdentityW',
'ResetWriteWatch',
'SHEnumerateUnreadMailAccountsW',
'UnloadNetworkFonts',
'WSARecvDisconnect',
'gluNurbsCallback',
'acmStreamOpen',
'GdipSaveImageToStream',
'FindVolumeMountPointClose',
'GdiPlayDCScript',
'GetConsoleFontInfo',
'GetThemeSysBool',
'GlobalUnfix',
'Heap32ListFirst',
'MprInfoBlockSet',
'UrlIsA',
'WSAEnumNameSpaceProvidersW',
'WSAUnhookBlockingHook',
'WriteFileGather',
'gluBeginSurface',
'gluEndTrim',
'gluGetTessProperty',
'acmStreamConvert',
'GetProfileSectionW',
'CreateWindowStationA',
'DnsHostnameToComputerNameW',
'FlatSB_GetScrollRange',
'GdiPlayScript',
'GetCharWidthInfo',
'GetConsoleHardwareState',
'JetCommitTransaction',
'ObjectPrivilegeAuditAlarmW',
'SetupDiGetSelectedDevice',
'WSAEnumProtocolsA',
'gluBeginPolygon',
'gluBeginTrim',
'gluBuild1DMipmaps',
'gluEndPolygon',
'gluEndSurface',
'gluErrorUnicodeStringEXT',
'gluGetNurbsProperty',
'gluLoadSamplingMatrices',
'gluNextContour',
'gluNurbsSurface',
'EndUpdateResourceA',
'EnumPropsW',
'EnumDisplayDevicesA',
'?open@ifstream@@QAEXPBDHH@Z',
'AVIStreamInfoW',
'AnyLinkedFonts',
'GdiInitSpool',
'ObjectPrivilegeAuditAlarmA',
'PathCommonPrefixA',
'STGMEDIUM_UserMarshal',
'UuidCompare',
'WSAInstallServiceClassA',
'acmStreamUnprepareHeader',
'??0ofstream@@QAE@PBDHH@Z',
'acmStreamPrepareHeader',
'GetCommProperties',
'BRUSHOBJ_hGetColorTransform',
'CADeleteCA',
'DTC_XaOpen',
'DTC_XaPrepare',
'DTC_XaRollback',
'DrawStatusText',
'EnumICMProfilesW',
'Format',
'GdiConvertBrush',
'GdiSetLastError',
'GetCharWidthI',
'ImageList_SetFlags',
'ObjectDeleteAuditAlarmW',
'OpenWaitableTimerW',
'PathCompactPathExA',
'RetrieveUrlCacheEntryStreamA',
'StartFormPage',
'UrlCompareA',
'UtConvertDvtd32toDvtd16',
'WTSCloseServer',
'DdeDisconnectList',
'DrawStatusTextA',
'EngCreateDeviceBitmap',
'EngPlgBlt',
'GdiGetCharDimensions',
'GetConsoleInputExeNameA',
'GetMetaRgn',
'WSCWriteNameSpaceOrder',
'WTSEnumerateServersW',
'AreAnyAccessesGranted',
'GetVolumeNameForVolumeMountPointA',
'SymGetModuleInfoW',
'DosPathToSessionPathW',
'EnumLanguageGroupLocalesW',
'FindActCtxSectionStringA',
'GdiConvertBitmapV5',
'GetConsoleAliasExesLengthA',
'GetConsoleSelectionInfo',
'GetPrivateObjectSecurity',
'GetUdpTable',
'InvalidateConsoleDIBits',
'ObjectDeleteAuditAlarmA',
'RtlGetProcessHeaps',
'SCardForgetCardTypeW',
'UnlockWindowStation',
'WTSTerminateProcess',
'GetLastInputInfo',
'__vbaVarXor',
'WTSWaitSystemEvent',
'AVIFileInfoW',
'CreateSocketHandle',
'EngUnicodeToMultiByteN',
'EnumLanguageGroupLocalesA',
'GdiPlayJournal',
'GetConsoleCharType',
'GetThemeAppProperties',
'GetThemeFilename',
'Heap32ListNext',
'InternetTimeToSystemTimeW',
'MirrorRgn',
'RetrieveUrlCacheEntryFileA',
'RpcBindingInqAuthInfoExW',
'SHRegSetUSValueA',
'SetFormW',
'WSAGetQOSByName',
'AccessCheckByTypeAndAuditAlarmA',
'AddAuditAccessObjectAce',
'AdsTypeToPropVariant',
'CallMsgFilter',
'DeletePrinterDataExW',
'EngQueryLocalTime',
'GdiAddGlsBounds',
'GdiPrinterThunk',
'GetKerningPairs',
'ImmCreateIMCC',
'OneXAddTLV',
'PATHOBJ_vGetBounds',
'PrivilegedServiceAuditAlarmA',
'WINNLSGetIMEHotkey',
'XFORMOBJ_iGetXform',
'_rmtmp',
'waveInOpen',
'CryptBinaryToStringA',
'SetCommConfig',
'PathMakeSystemFolderW',
'SetDoubleClickTime',
'ChangeMenuA',
'?Initialize@CLASS_DESCRIPTOR@@QAEEXZ',
'ADsGetObject',
'AccessCheckAndAuditAlarmW',
'CloseProfileUserMapping',
'ConvertSecDescriptorToVariant',
'ConvertSecurityDescriptorToSecDes',
'EnumPrinterDataW',
'GdiIsMetaPrintDC',
'GdiSetServerAttr',
'GetTextExtentExPointWPri',
'JetCloseDatabase',
'MapUserPhysicalPagesScatter',
'OneXDeInitialize',
'OneXInitialize',
'PathIsLFNFileSpecW',
'PathSkipRootA',
'RemoveFontResourceTracking',
'RetrieveUrlCacheEntryFileW',
'STROBJ_bEnumPositionsOnly',
'Shell_NotifyIcon',
'WSCInstallNameSpace',
'XLATEOBJ_iXlate',
'GetDefaultCommConfigW',
'FindFirstVolumeMountPointA',
'SHGetSettings',
'GdiGetBatchLimit',
'ADsBuildEnumerator',
'ADsEnumerateNext',
'AdsFreeAdsValues',
'BinarySDToSecurityDescriptor',
'ConnectionVer',
'CreatePrivateObjectSecurity',
'CreatePrivateObjectSecurityEx',
'GdiGetPageHandle',
'GetWindowModuleFileName',
'Heap32Next',
'ImmSetHotKey',
'LsaSetDomainInformationPolicy',
'OneXCopyAuthParams',
'PropVariantToAdsType2',
'ReplaceFile',
'SetComPlusPackageInstallStatus',
'WPUCompleteOverlappedRequest',
'WSCWriteProviderOrder',
'WTSDisconnectSession',
'WTSQueryUserConfigW',
'GetMouseMovePointsEx',
'DlgDirListW',
'ADsBuildVarArrayInt',
'AVIFileAddRef',
'AssocQueryStringByKeyA',
'EnumPrinterDataExA',
'GdiEndPageEMF',
'GdipGetClipBounds',
'GetComPlusPackageInstallStatus',
'GetConsoleKeyboardLayoutNameW',
'IMPQueryIMEW',
'InternetTimeFromSystemTimeW',
'PATHOBJ_vEnumStart',
'STROBJ_bEnum',
'StgOpenAsyncDocfileOnIFillLockBytes',
'UrlIsOpaqueW',
'WSAGetServiceClassNameByClassIdA',
'WSASetBlockingHook',
'WriteProfileSectionA',
'ProcCallEngine',
'GetPerAdapterInfo',
'UnloadKeyboardLayout',
'waveInReset',
'ADsBuildVarArrayStr',
'ADsOpenObject',
'AdsTypeToPropVariant2',
'CryptMsgDuplicate',
'EngGetCurrentCodePage',
'EngStrokePath',
'EnumDateFormatsExW',
'GdiEntry14',
'GdiEntry2',
'LZCloseFile',
'MiniDumpReadDumpStream',
'NtQuerySemaphore',
'PropStgNameToFmtId',
'SecurityDescriptorToBinarySD',
'WSAProviderConfigChange',
'_mbsdup',
'ClearEventLogA',
'??1ofstream@@UAE@XZ',
'GetTitleBarInfo',
'EnumResourceNamesA',
'BroadcastSystemMessageW',
'GetCPInfoExA',
'?rdbuf@?$basic_ifstream@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_filebuf@DU?$char_traits@D@std@@@2@XZ',
'?rend@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$reverse_iterator@V?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ',
'AccessCheckByTypeResultList',
'CACloseCertType',
'CryptGetDefaultProviderA',
'DDMGetPhonebookInfo',
'GetDCBrushColor',
'GetExpandedNameW',
'ImmGenerateMessage',
'JetCloseTable',
'MprAdminConnectionGetInfo',
'NtWaitLowEventPair',
'OpenBackupEventLogW',
'PropVariantToAdsType',
'RasSetCustomAuthDataA',
'RunDllW',
'SetSecurityInfoExA',
'ShowHideMenuCtl',
'WNetDisconnectDialog1W',
'__pxcptinfoptrs',
'_fileinfo',
'CryptStringToBinaryA',
'GetDeviceDriverBaseNameW',
'DeleteColorSpace',
'RasGetConnectStatusA',
'MethCallEngine',
'CM_Add_Range',
'CreatePointerMoniker',
'GetConsoleKeyboardLayoutNameA',
'InitInstance',
'JetCloseFile',
'MessageLoop',
'SetComputerNameExW',
'SetDefaultPrinterA',
'UrlEscapeA',
'WSAAsyncGetHostByAddr',
'SetDefaultCommConfigW',
'waveInUnprepareHeader',
'SetICMProfileA',
'CLSIDFromProgIDEx',
'RegWdQueryA',
'TraceSQLError',
'WSAAsyncGetServByPort',
'WSAInstallServiceClassW',
'WSASetServiceA',
'SendMessageCallbackA',
'AddConsoleAliasW',
'AddPortW',
'GetWriteWatch',
'LZInit',
'SHGetFileInfo',
'waveInAddBuffer',
'waveInClose',
'AddAccessDeniedObjectAce',
'CAGetCACertificate',
'ConfigurePortA',
'DeviceCapabilities',
'DosPathToSessionPathA',
'FindFirstFreeAce',
'HPALETTE_UserUnmarshal',
'JetBeginTransaction',
'NdrComplexArrayFree',
'ObjectOpenAuditAlarmW',
'OpenAs_RunDLL',
'RpcAsyncGetCallStatus',
'SetupGetFileCompressionInfoW',
'WSAAsyncGetProtoByNumber',
'_mbcasemap',
'drvSetDefaultCommConfigA',
'midiStreamPosition',
'waveInStart',
'waveInPrepareHeader',
'CryptDuplicateKey',
'??1ios@@UAE@XZ',
'CreateFontIndirectExW',
'EnumDesktopsW',
'GetConsoleAliasW',
'RequestWakeupLatency',
'WNetDisconnectDialog',
'_LaunchSignupWizard@12',
'_pgmptr',
'mmioSendMessage',
'WSAIsBlocking',
'TransmitCommChar',
'EnumPrintProcessorsA',
'GetThemeInt',
'IsUserAdmin',
'SHGetNewLinkInfoA',
'SetSecurityInfoExW',
'SetTimerQueueTimer',
'SetupDecompressOrCopyFileW',
'UrlIsNoHistoryA',
'_SetICMProfile_@8',
'lineTranslateDialogW',
'_fstati64',
'VerLanguageNameA',
'DrawDibDraw',
'capGetDriverDescriptionW',
'ShellAboutW',
'BuildCommDCBAndTimeoutsA',
'SetFileValidData',
'HiliteMenuItem',
'BuildSecurityDescriptorA',
'CheckColorsInGamut',
'CloseDriver',
'CoLoadServices',
'ComPs_NdrDllCanUnloadNow',
'GetThemeSysFont',
'NdrClientInitialize',
'PerfOpen',
'SCardLocateCardsW',
'VarI1FromR4',
'VarRound',
'VerifyConsoleIoHandle',
'WSAGetServiceClassInfoW',
'WSARemoveServiceClass',
'_CompareString_@24',
'_CreateMDIWindow_@40',
'_DlgDirList_@20',
'_GetSystemDirectory_@8',
'_LoadBitmap@8',
'_NDdeGetErrorString_@12',
'_PeekMessage@20',
'_PolyTextOut_@12',
'_RegUnLoadKey_@8',
'_SetFileAttributes_@8',
'_WriteConsoleInput_@16',
'_lstrcpy_@8',
'tid32Message',
'wwwp',
'GetInputState',
'CertFindChainInStore',
'SetCommBreak',
'LookupAccountSidA',
'GetWindowRgnBox',
'D3DXFilterTexture',
'SHGetDiskFreeSpaceExA',
'SetThreadDesktop',
'WNetGetLastErrorW',
'ArrangeIconicWindows',
'AddFontResourceTracking',
'ClusterNodeControl',
'EnumPrinterDataA',
'ExtractAssociatedIconExA',
'GdiConvertAndCheckDC',
'GdiGetDevmodeForPage',
'GdiGetPageCount',
'GetConsoleProcessList',
'GetConvertStg',
'IoRegisterBootDriverReinitialization',
'MapFileAndCheckSumA',
'NDdeShareAddA',
'RegisterServiceProcess',
'StrRStrW',
'WSAGetServiceClassInfoA',
'WinHttpCreateUrl',
'drvCommConfigDialogA',
'GetClipboardSequenceNumber',
'GetCurrentHwProfileW',
'PathGetCharTypeA',
'AddAccessAllowedObjectAce',
'__vbaUI1ErrVar',
'pcap_freealldevs',
'SetMenuContextHelpId',
'AccessibleObjectFromPoint',
'CMP_Report_LogOn',
'CM_Get_Device_ID_List_Size_ExW',
'CoIsHandlerConnected',
'CountryRunOnce',
'GdiStartPageEMF',
'InvokeControlPanel',
'PrinterMessageBoxW',
'SelectBrushLocal',
'StrCatChainW',
'StrStrNW',
'VarDecFromUI8',
'VarR4FromUI4',
'CreateConsoleScreenBuffer',
'SetTimeZoneInformation',
'IsValidLanguageGroup',
'XFORMOBJ_bApplyXform',
'AllocateLocallyUniqueId',
'SHFreeNameMappings',
'SHQueryRecycleBinA',
'mouse_event',
'ToAscii',
'CM_Add_IDA',
'CreateActCtxA',
'DllInstall',
'DrawCaption',
'EngPaint',
'GdiGetSpoolFileHandle',
'NdrComplexArrayBufferSize',
'NotifyBootConfigStatus',
'ObjectCloseAuditAlarmW',
'ScheduleJob',
'SetFileApisToANSI',
'SetVolumeMountPointW',
'StgOpenPropStg',
'GetKeyboardLayoutNameA',
'GetCalendarInfoW',
'midiOutPrepareHeader',
'CheckSumMappedFile',
'DrawThemeEdge',
'EqualDomainSid',
'gluBeginCurve',
'gluDeleteNurbsRenderer',
'gluDisk',
'gluEndCurve',
'gluGetString',
'gluNewNurbsRenderer',
'gluNurbsCurve',
'gluNurbsProperty',
'Netbios',
'__vbaNextEachAry',
'FindFirstVolumeA',
'GdipGetTextRenderingHint',
'OemToCharW',
'__vbaForEachAry',
'GetWindowContextHelpId',
'SwitchDesktop',
'AssocQueryStringA',
'CM_Add_Empty_Log_Conf',
'CoGetPSClsid',
'ErrMsg',
'GdiCleanCacheDC',
'GdiConvertEnhMetaFile',
'GdiConvertFont',
'GdiIsPlayMetafileDC',
'GetLogColorSpaceW',
'SetUserObjectInformationW',
'VarFormatNumber',
'VarI4FromUI8',
'VarUI8FromI8',
'drvGetDefaultCommConfigA',
'??0ifstream@@QAE@PBDHH@Z',
'BlockInput',
'ClearEventLogW',
'ScrollConsoleScreenBufferA',
'ImageNtHeader',
'DeleteVolumeMountPointW',
'FONTOBJ_vGetInfo',
'DoEnvironmentSubstW',
'ReadConsoleOutputCharacterW',
'capCreateCaptureWindowA',
'AVIFileOpenW',
'BuildTrusteeWithNameA',
'CMP_Init_Detection',
'CloseCluster',
'CoSwitchCallContext',
'EngCheckAbort',
'FindNextVolumeMountPointA',
'GdiGetDC',
'GetVolumePathNamesForVolumeNameA',
'JetGetBookmark',
'NDdeShareGetInfoA',
'OleCreateLinkFromDataEx',
'OleSavePictureFile',
'PrintersGetCommand_RunDLLA',
'PropSysAllocString',
'ReadOleStg',
'StgCreatePropSetStg',
'StgCreatePropStg',
'VarBstrFromUI2',
'VarI2FromUI2',
'VerFindFileW',
'WSAJoinLeaf',
'WaitForPrinterChange',
'OpenDesktopA',
'WNetGetLastErrorA',
'AddPortA',
'GetSystemPowerStatus',
'AddFormW',
'CoGetCurrentProcess',
'SetComputerNameW',
'EnumDesktopsA',
'?SystemExceptionTranslator@@YAXIPAU_EXCEPTION_POINTERS@@@Z',
'CM_Get_Resource_Conflict_DetailsW',
'CPlApplet',
'CoCreateActivity',
'CoEnterServiceDomain',
'CoFileTimeToDosDateTime',
'CoRegisterSurrogate',
'ComPlusMigrate',
'CommitSpoolData',
'Control_RunDLL',
'EngCreateBitmap',
'EnumPrinterDataExW',
'ExtractAssociatedIconExW',
'FlatSB_ShowScrollBar',
'GdiResetDCEMF',
'GetThemePosition',
'GlobalCompact',
'NDdeShareDelA',
'OleCreateFromFileEx',
'OleInitializeWOW',
'QueryFontAssocStatus',
'ReadConsoleOutputCharacterA',
'SHEnumValueA',
'SetMetaRgn',
'SetPrivateObjectSecurity',
'SetSetupSave',
'TraceSQLCancel',
'VarBstrFromUI8',
'VarI1FromUI2',
'VarI4FromDisp',
'VarI8FromBool',
'WSAAsyncGetProtoByName',
'AbortPath',
'GetCompressedFileSizeA',
'EnumDateFormatsW',
'CreateMailslotA',
'GdipGetImageEncodersSize',
'CallMsgFilterW',
'GetSidIdentifierAuthority',
'MenuHelp',
'GdipGetImageEncoders',
'DeletePrintProvidorW',
'BackupWrite',
'SHGetDiskFreeSpaceExW',
'?close@ifstream@@QAEXXZ',
'SHEmptyRecycleBinW',
'CPDecrypt',
'CloseSpoolFileHandle',
'CoRegisterChannelHook',
'CoRevokeMallocSpy',
'DdeImpersonateClient',
'EnumPrintProcessorDatatypesA',
'EnumTimeFormatsW',
'GdiStartDocEMF',
'GetFileBandwidthReservation',
'GetTextExtentExPointI',
'HMETAFILEPICT_UserFree',
'ICSeqCompressFrameEnd',
'IsPwrSuspendAllowed',
'OleCreateDefaultHandler',
'OleCreateEx',
'OleNoteObjectVisible',
'OpenDriver',
'PathIsContentTypeA',
'RealShellExecuteA',
'SHGetNewLinkInfo',
'SHSetUnreadMailCountW',
'SNB_UserSize',
'SafeArraySetRecordInfo',
'SeekPrinter',
'SetSystemCursor',
'StgConvertPropertyToVariant',
'UrlCreateFromPathA',
'VarBoolFromUI2',
'VarMul',
'VarR8FromI1',
'PrintWindow',
'UpdateResourceA',
'CombineTransform',
'GetDefaultCommConfigA',
'VkKeyScanA',
'GetIfTable',
'GetNamedPipeHandleStateA',
'GetProcessImageFileNameA',
'FDICopy',
'FDICreate',
'AddPrinterConnectionW',
'CloseClusterGroup',
'CoGetApartmentID',
'CreateObjrefMoniker',
'DsBindWithCredA',
'EXTDEVICEMODE',
'EnumerateSecurityPackagesW',
'GetConsoleAliasExesA',
'GetSpoolFileHandle',
'InternalExtractIconListA',
'InternalExtractIconListW',
'MprConfigInterfaceTransportGetHandle',
'OleLoadPictureFile',
'RegenerateUserEnvironment',
'SHReleaseThreadRef',
'SetConsoleDisplayMode',
'SetVDMCurrentDirectories',
'StgSetTimes',
'VarBstrFromI8',
'VarR8Round',
'VarUI4FromDisp',
'wglRealizeLayerPalette']

test = 0
try:
    import lief
    import datetime
    import datetime as pydatetime
    import string
    import re
    import requests
    import pickle
    import ctypes
except Exception as e:
    excep = str(e)
    ctypes.windll.user32.MessageBoxW(None, excep, "Exception", 0)
    test = 4

## dos header check
def isDosHeader(binary):
    dos_header = []
    dos_header_list=[23117,144,3,0,4,0,65535,0,184,0,0,0,64,0,0,0]
    try:
        dos_header = [binary.dos_header.magic,
                  binary.dos_header.used_bytes_in_the_last_page,
                  binary.dos_header.file_size_in_pages,
                  binary.dos_header.numberof_relocation,
                  binary.dos_header.header_size_in_paragraphs,
                  binary.dos_header.minimum_extra_paragraphs,
                  binary.dos_header.maximum_extra_paragraphs,
                  binary.dos_header.initial_relative_ss,
                  binary.dos_header.initial_sp,
                  binary.dos_header.checksum,
                  binary.dos_header.initial_ip,
                  binary.dos_header.initial_relative_cs,
                  binary.dos_header.addressof_relocation_table,
                  binary.dos_header.overlay_number,
                  binary.dos_header.oem_id,
                  binary.dos_header.oem_info]
    except:
        pass
    if dos_header != dos_header_list:
        return True
    else:
        return False

# section name check
def isSectionName(binary):
    section_name_list = ['.00cfg','.AAWEBS','.apiset','.arch','.autoload_text','.bindat','.bootdat','.bss','.buildid','.CLR_UEF','.code','.cormeta','.complua','.CRT','.cygwin_dll_common','.data','.data1','.data2','.data3', '.debug', '.debug$F', '.debug$P', '.debug$S', '.debug$T',  '.drectve', '.didat', '.didata', '.edata', '.eh_fram', '.export', '.fasm', '.flat', '.gfids', '.giats', '.gljmp', '.glue_7t', '.glue_7','.idata' ,'.idlsym', '.impdata', '.import', '.itext', '.ndata', '.orpc', '.pdata', '.rdata', '.reloc', '.rodata', '.rsrc', '.sbss', '.script', '.shared', '.sdata', '.srdata', '.stab', '.stabstr', '.sxdata', '.text', '.text0', '.text1', '.text2', '.text3', '.textbss', '.tls', '.udata', '.vsdata', '.xdata', '.wixburn', '.wpp_sf', '._winzip_', '.adata']
    section_name=[]
    section_name_lower=[]
    section_name_list_lower=[]
    try: 
        for section in binary.sections:
            section_name.append(section.name)
        for i in section_name:
            section_name_lower.append(i.lower())
        for i in section_name_list:
            section_name_list_lower.append(i.lower())
    except:
        pass
    for name1 in section_name_lower:
        if name1 not in section_name_list_lower:
            return True
            break
        else:
            return False


# time date stamp check
# .exe에서 time data stamp를 추출하여 시간으로 변환 (ver. 경로 저장)

def isTimeDate(binary):
    t = binary.header.time_date_stamps
    date = datetime.datetime.fromtimestamp(int(t)).strftime('%Y-%m-%d %H:%M:%S')

    # 현재시간을 timestamp형식으로 변환
    # 얻은 값을 int형으로 변환

    def get_now():
        return pydatetime.datetime.now()

    def get_now_timestamp():
        return get_now().timestamp()

    ts = get_now_timestamp()
    date2=int(t)
    ts2=int(ts)

    # 현재 시간보다 큰 값에서 1을 츨력. (아닌 값은 0)
    if (date2 > ts2) | (date2 < ts2 - 631152000):
        return True
    else:
        return False

# dll characteristics check
def isDllCha(binary):
    dll_list = list(binary.optional_header.dll_characteristics_lists)
    for i in range(len(dll_list)):
        if str(dll_list[i]) == 'DLL_CHARACTERISTICS.WDM_DRIVER':
            return True
        else:
            continue
    return False


# packing 유무
def isPacking(binary):
    raw_size=[]
    for section in binary.sections:
        raw_size.append(section.sizeof_raw_data)
    virtual_size=[]
    for section in binary.sections:
        virtual_size.append(section.virtual_size)
    if (raw_size[0] == 0 | ((virtual_size[0]-raw_size[0])> (raw_size[0] * 2)) ):
        return True
    else:
        return False


# section 갯수
def isSectionNum(binary):
    section_name=[]
    for section in binary.sections:
        section_name.append(section.name)
    if len(section_name) > 6:
        return True
    else:
        return False


# IP, URL check
printable = set(string.printable)
def process(stream):
    found_str = ""
    while True:
        data = stream.read(1024*4)
        i = 0
        if not data:
            break  
        for char in data:
            char = chr(char)
            if i > 4:
                break
            if char in printable:
                found_str += char
            elif len(found_str) >= 4:
                #if len bigger than 4 return found_str
                yield found_str       
                found_str = ""
            else:
                found_str = ""
              
def ip_URL_search(path):
    is_ip = 0
    is_dns = 0
    PEtoStr = open(path, 'rb')
    for found_str in process(PEtoStr):
        print()
        #search ip address
        m = re.search('^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$', found_str)
        if m:
            if m.group(0) != '127.0.0.1' and m.group(0) !='6.0.0.0' and m.group(0) != '0.0.0.0':
                is_ip = 1
        #search http or https address
        n = re.search('h\D{3,4}\:\/\/.{0,30}', found_str)
        if n:
            is_dns = 1
    PEtoStr.close()
    return is_ip, is_dns



# xor 처리후 문자열 출력
printable = set(string.printable)
def Bytearray(data, num):
    found_str = ""
    i = 0
    for char in data:
        char ^= num
        char = chr(char)
        if i > 4:
            break
        if char in printable:
            found_str += char
        elif len(found_str) >= 4:
            #if len bigger than 4 return found_str
            yield found_str       
            found_str = ""
        else:
            found_str = ""




# ip, url 검출
def check_ip_url(string):
    #search ip address
    m = re.search('^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$', string)
    if m:
        if m.group(0) != '127.0.0.1' and m.group(0) !='6.0.0.0' and m.group(0) != '0.0.0.0':
            return 1
    #search http or https address
    n = re.search('h\D{3,4}\:\/\/.{0,30}', string)
    if n:
        return 1


# xor check
#
def isXor(path, mal_api_list):
    for num in range(1, 25):
        f = open(path,'rb')
        data = f.read()
        f.close()
        for found_str in Bytearray(data, num):
            if (found_str in mal_api_list or check_ip_url(found_str)):
                    return True
    return False


# binary.optional_header.sizeof_uninitialized_data
def isUninit(binary):
    if binary.optional_header.sizeof_uninitialized_data > 0:
        return True
    else:
        return False

# Certificate table
def isCertTable(binary):
    for i, table in enumerate(binary.data_directories):
        if i == 4:
            if table.size > 0:
                return False
            else:
                return True
        else:
            pass

# dll check
def isDll(binary):
    mal_dll_list=['ADVAPI32.DLL','MSVBVM60.DLL','OLE32.DLL','MSVCRT.DLL','SHELL32.DLL','QT5CORE.DLL','WS2_32.DLL','WININET.DLL','SHLWAPI.DLL','WSOCK32.DLL']
    dll_name=[]
    for dll in binary.libraries:
        dll_name.append(dll)

    dll_name_lower=[]
    mal_dll_list_lower=[]
    for i in dll_name:
        dll_name_lower.append(i.lower())
    for i in mal_dll_list:
        mal_dll_list_lower.append(i.lower())

    check_dll=[0 for i in range(len(mal_dll_list))]
    for mal_dll in mal_dll_list_lower:
        if mal_dll in dll_name_lower:
            check_dll_index=mal_dll_list_lower.index(mal_dll)
            check_dll[check_dll_index]=1

    return check_dll


# API check
def isApi(binary, mal_api_list):

    function_name=[]
    for function in binary.imported_functions:
        function_name.append(function.name)

    function_name_lower=[]
    mal_api_list_lower=[]
    for i in function_name:
        function_name_lower.append(i.lower())
    for i in mal_api_list:
        mal_api_list_lower.append(i.lower())

    check_api=[0 for i in range(len(mal_api_list))]
    for mal_api in mal_api_list_lower:
        if mal_api in function_name_lower:
            check_index=mal_api_list_lower.index(mal_api)
            check_api[check_index]=1

    return check_api


def All_Check(path):
    tmp = [0 for i in range(11)]
    try:
        binary = lief.parse(path)
    except:
        return 2
    
    # 1 Dos Header 
    if isDosHeader(binary):
        tmp[0] = 1
        
    # 2 section name 
    if isSectionName(binary):
        tmp[1] = 1
        
    # 3 time_date
    if isTimeDate(binary):
        tmp[2] = 1
        
    # 4 dll character
    if isDllCha(binary):
        tmp[3] = 1
        
    # 5 packing 
    if isPacking(binary):
        tmp[4] = 1
        
    # 6 section_num(binary)
    if isSectionNum(binary):
        tmp[5] = 1
        
    # 7,8 string IP, URL
    tmp[6], tmp[7] = ip_URL_search(path)
        
    # 9 XOR 
    if isXor(path, mal_api_list):
        tmp[8] = 1

    # 10 sizeof_uninitialized_data
    if isUninit(binary):
        tmp[9] = 1
    
    # 11 Certificate table
    if isCertTable(binary):
        tmp[10] = 1
        
    # dll 
    dll_tmp = isDll(binary)
    tmp += dll_tmp
    
    # api 
    api_tmp = isApi(binary, mal_api_list)
    tmp += api_tmp
        
    print(len(tmp))
    # Model Deliver
    try:
        myurl = 'http://192.168.10.140:5000/predict'
        content_type = 'application/json'
        headers = {'content-type': content_type}

        response = requests.post(myurl, data=pickle.dumps(tmp), headers=headers)
        result = response.json()['result']
    except Exception as e:
        excep = str(e)
        ctypes.windll.user32.MessageBoxW(None, excep, "Exception", 0)
        return 3

    if test == 4:
        return 2
    
    return result

## test
if __name__ == "__main__":
    path = [r"C:\Users\user\source\repos\Yak_project\nomal1.vir",#0
        r"C:\Users\user\source\repos\Yak_project\nomal2.vir",   #0
    r"C:\Windows\System32\calc.exe",    #1 X
    r"C:\Windows\System32\notepad.exe", #1 X
    r"C:\Program Files\Internet Explorer\iexplore.exe", #0
    'C:/Users/user/source/repos/Yak_project/infected1.vir', #1
    'C:/Users/user/source/repos/Yak_project/infected2.vir', #1
    'C:/Users/user/source/repos/Yak_project/infected3.vir'] #1
    #서버: OX
    for i in path:
        print(All_Check(i))
    
